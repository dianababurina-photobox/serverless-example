AWSTemplateFormatVersion: "2010-09-09"
Description: "Deployment role for {xx-foo-bar-xx}"

Parameters:
  EnvironmentTypeParam:
    Type: String
    Default: development
    AllowedValues:
      - development
      - staging
      - production

Resources:
  XXFooBarXXDeploymentRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Sub "xx-foo-bar-xx-deployment-role-${EnvironmentTypeParam}"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
          - Effect: Allow
            Principal:
              AWS:
                - "arn:aws:iam::496870459963:role/photobox-ecs-instance-bootstrap"
                - "arn:aws:iam::496870459963:role/jenkins-instance-role"
                - "arn:aws:iam::496870459963:root"
            Action:
              - "sts:AssumeRole"
      Path: /
      Policies:
        - PolicyName: !Sub "xx-foo-bar-xx-deployment-policy-${EnvironmentTypeParam}"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - "*"

              - Sid: CreationalCfn
                Effect: Allow
                Action:
                  - cloudformation:CreateUploadBucket
                  - cloudformation:CancelUpdateStack
                  - cloudformation:CreateStack
                  - cloudformation:DeleteStack
                  - cloudformation:UpdateStack
                  - cloudformation:CreateChangeSet
                  - cloudformation:ContinueUpdateRollback
                  - cloudformation:EstimateTemplateCost
                  - cloudformation:ExecuteChangeSet
                Resource:
                  - !Sub "arn:aws:cloudformation:*:${AWS::AccountId}:stack/xx-foo-bar-xx-*"

              - Sid: Listings
                Effect: Allow
                Action:
                  - cloudformation:Describe*
                  - cloudformation:PreviewStackUpdate
                  - cloudformation:Get*
                  - cloudformation:List*
                  - cloudformation:Describe*
                  - cloudformation:ValidateTemplate
                  - lambda:List*
                  - lambda:Get*
                  - iam:GetRole
                  - s3:ListAllMyBuckets
                  - s3:List*
                Resource:
                  - "*"

              - Sid: CfBucket
                Effect: Allow
                Action:
                  - s3:HeadBucket
                  - s3:CreateBucket
                  - s3:Get*
                  - s3:Delete*
                  - s3:Put*
                Resource:
                  - "arn:aws:s3:::xx-foo-bar-xx-*"

              - Sid: LambdaDeployPermissions
                Effect: Allow
                Action:
                  - lambda:AddPermission
                  - lambda:InvokeFunction
                  - lambda:DeleteFunction
                  - lambda:PublishVersion
                  - lambda:CreateFunction
                  - lambda:RemovePermission
                  - lambda:CreateAlias
                  - lambda:Update*
                  - lambda:EnableReplication*
                Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:xx-foo-bar-xx-*"

              - Effect: Allow
                Action:
                  - lambda:CreateEventSourceMapping
                  - lambda:DeleteEventSourceMapping
                Resource:
                  - "*"

              - Sid: IAMExecutionRole
                Effect: Allow
                Action:
                  - iam:CreateRole
                  - iam:GetRole
                  - iam:UpdateRole
                  - iam:DeleteRole
                  - iam:GetRolePolicy
                  - iam:AttachRolePolicy
                  - iam:DetachRolePolicy
                  - iam:DeleteRolePolicy
                  - iam:PutRolePolicy
                  - iam:ListRoleTags
                  - iam:TagRole
                  - iam:UntagRole
                Resource:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/xx-foo-bar-xx-*"

              - Sid: LoggingRead
                Effect: Allow
                Action:
                  - logs:DescribeLogGroups
                Resource:
                  - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group::log-stream:"

              - Sid: LoggingAdmin
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:DeleteLogGroup
                  - logs:TagLogGroup
                  - logs:PutSubscriptionFilter
                Resource:
                  - !Sub "arn:aws:logs:*:${AWS::AccountId}:log-group:/aws/lambda/xx-foo-bar-xx-*"
              - Effect: Allow
                Action:
                  - logs:DescribeMetricFilters
                  - logs:DeleteMetricFilter
                  - logs:PutMetricFilter
                  - logs:TestMetricFilter
                Resource:
                  - "*"

              - Sid: DynamoDB
                Effect: Allow
                Action:
                  - dynamodb:DescribeTable
                  - dynamodb:CreateTable
                  - dynamodb:UpdateTable
                  - dynamodb:DeleteTable
                  - dynamodb:TagResource
                  - dynamodb:UpdateTimeToLive
                  - dynamodb:DescribeTimeToLive
                  - dynamodb:Scan
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:DeleteItem
                  - dynamodb:BatchWriteItem
                Resource:
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/xx-foo-bar-xx-*"

              - Sid: "ApiGateway"
                Effect: Allow
                Action:
                  - apigateway:GET
                  - apigateway:POST
                  - apigateway:PUT
                  - apigateway:PATCH
                  - apigateway:DELETE
                  - apigateway:UpdateRestApiPolicy
                Resource:
                  - "arn:aws:apigateway:*::/restapis*"
                  - "arn:aws:apigateway:*::/tags*"
                  - "arn:aws:apigateway:*::/domainnames*"
                #permissions to list hosted zones
              - Sid: AWSRoute53ListHostedZones
                Effect: Allow
                Action:
                  - route53:ListHostedZones
                Resource:
                  - "*" #action doesn't support resource-level permission
                #permissions to add/remove a record set for your app
              - Sid: AWSRoute53
                Effect: Allow
                Action:
                  - route53:Get*
                  - route53:ChangeResourceRecordSets
                Resource:
                  - !Sub arn:aws:route53:::hostedzone/${HostedZoneId}
                  - "arn:aws:route53:::change/*"
                #permissions to list all certificates
              - Sid: AWSCertificateManager
                Effect: Allow
                Action:
                  - acm:ListCertificates
                Resource:
                  - "*" #action doesn't support resource-level permission

              - Sid: Cloudfront
                Effect: Allow
                Action:
                  - cloudfront:CreateDistribution
                  - cloudfront:TagResource
                  - cloudfront:UpdateDistribution
                  - cloudfront:GetDistribution
                Resource:
                  - "*"
                #permissions to create an IAM role that is linked to a specific AWS service.
              - Effect: Allow
                Action:
                  - iam:CreateServiceLinkedRole
                Resource:
                  - !Sub arn:aws:iam::${AWS::AccountId}:role/aws-service-role/ops.apigateway.amazonaws.com/AWSServiceRoleForAPIGateway

              - Effect: Allow
                Action:
                  - cloudwatch:GetDashboard
                Resource:
                  - !Sub "arn:aws:cloudwatch::${AWS::AccountId}:dashboard/xx-foo-bar-xx-${EnvironmentTypeParam}-monitoring"

              - Sid: CloudwatchDashboard
                Effect: Allow
                Action:
                  - cloudwatch:GetDashboard
                  - cloudwatch:PutDashboard
                  - cloudwatch:DeleteDashboards
                Resource:
                  - !Sub "arn:aws:cloudwatch::${AWS::AccountId}:dashboard/xx-foo-bar-xx-${EnvironmentTypeParam}-monitoring"

              - Sid: XRay
                Effect: Allow
                Action:
                  - xray:PutTraceSegments
                  - xray:PutTelemetryRecords
                Resource: "*"
